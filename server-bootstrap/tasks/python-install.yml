---
  - name: Ubuntu | Installing apt packages useful for python development
    apt:
      name="{{packages}}"
      state=latest
      update_cache=yes
    vars:
      packages:
        - libsqlite3-dev
        - python-apt-common
        - python-dev
        - python3-dev
        - python3-pip
        - software-properties-common
        - virtualenv
        - python3-setuptools
        - sqlite3
    when: ansible_distribution == 'Ubuntu'

  - name: Check python version installed
    setup:
      filter: 'ansible_python_version'
    register: setup

  - name: Show Python Version installed
    debug:
      msg: La versiÃ³n de python instalada es {{ setup['ansible_facts']['ansible_python_version'] }}

  - name: Updating pip
    pip:
      name=pip
      state=latest
      executable=pip3
    when: setup['ansible_facts']['ansible_python_version'].split(".")[0] == "3" and setup['ansible_facts']['ansible_python_version'].split(".")[1] | int > 5

  - import_tasks: manual-pip-install.yml
    when: setup['ansible_facts']['ansible_python_version'].split(".")[0] == "3" and setup['ansible_facts']['ansible_python_version'].split(".")[1] == "5"

  - name: Adding WORKON_HOME environment variable
    lineinfile:
      dest=/home/{{ bootstrap_usuario_remoto }}/.bashrc
      line="export WORKON_HOME=~/{{ bootstrap_virtualenv_workon_home }}"
      state=present
      create=yes
    become: yes
    become_user: "{{ bootstrap_usuario_remoto }}"

  - name: Creating virtualenv directory
    file:
      path=/home/{{ bootstrap_usuario_remoto }}/{{ bootstrap_virtualenv_workon_home }}
      state=directory
      owner={{ bootstrap_usuario_remoto }}
    become: yes
    become_user: "{{ bootstrap_usuario_remoto }}"
