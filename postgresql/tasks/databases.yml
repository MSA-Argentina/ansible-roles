# file: postgresql/tasks/databases.yml

- name: Ensure PostgreSQL is running
  service:
    name: postgresql
    state: started

- name: Ubuntu | Make sure the PostgreSQL databases are present
  postgresql_db:
    name: "{{item.name}}"
    encoding: "{{postgresql_encoding}}"
    lc_collate: "{{postgresql_locale}}"
    lc_ctype: "{{postgresql_locale}}"
    template: "template0"
    state: present
  with_items: '{{ postgresql_databases }}'
  when: postgresql_databases|length > 0 and ansible_distribution == 'Ubuntu'

- name: FreeBSD | Make sure the PostgreSQL databases are present
  postgresql_db:
    name: "{{item.name}}"
    encoding: "{{postgresql_encoding}}"
    template: "template0"
    state: present
  with_items: '{{ postgresql_databases }}'
  when: postgresql_databases|length > 0 and ansible_distribution == 'FreeBSD'

- name: Add hstore to the databases with the requirement
  become: yes
  become_user: "{{postgresql_admin_user}}"
  shell: "psql {{item.name}} -c 'CREATE EXTENSION IF NOT EXISTS hstore;'"
  with_items: '{{ postgresql_databases }}'
  when: item.hstore is defined and item.hstore

- name: Add uuid-ossp to the database with the requirement
  become: yes
  become_user: "{{postgresql_admin_user}}"
  shell: "psql {{item.name}} -c 'CREATE EXTENSION IF NOT EXISTS uuid-ossp;'"
  with_items: '{{ postgresql_databases }}'
  when: item.uuid_ossp is defined and item.uuid_ossp

- name: Add postgis to the databases with the requirement
  become: yes
  become_user: "{{postgresql_admin_user}}"
  shell: "psql {{item.name}} -c 'CREATE EXTENSION IF NOT EXISTS postgis;'"
  with_items: '{{ postgresql_databases }}'
  when: item.postgis is defined and item.postgis
