---
- name: PostgreSQL | Install pgbouncer
  apt:
    name: "{{item}}"
    state: present
  environment:
    LC_ALL: "{{ postgresql_locale }}"
    LC_LCTYPE: "{{ postgresql_locale }}"
  with_items:
    - pgbouncer

- name: PostgreSQL | Add pgbouncer configuration
  template:
    src: pgbouncer.ini.j2
    dest: "{{postgresql_pgbouncer_conf_dir}}/pgbouncer.ini"
    owner: "{{postgresql_admin_user}}"
    group: "{{postgresql_admin_user}}"
    mode: 0640

- name: PostgreSQL | Add pgbouncer authfile
  template:
    src: userlist.txt.j2
    dest: "{{postgresql_pgbouncer_conf_dir}}/userlist.txt"
    owner: "{{postgresql_admin_user}}"
    group: "{{postgresql_admin_user}}"
    mode: 0640

- name: PostgreSQL | Make sure the auth user is present
  postgresql_user:
    name: "{{ postgresql_pgbouncer_auth_user.name }}"
    password: "{{ postgresql_pgbouncer_auth_user.pass | default('pass')}}"
    state: present
    login_host: localhost
    role_attr_flags: "LOGIN"

- name: PostgreSQL | Grant auth_user permissions on table pg_shadow
  become: yes
  become_user: "{{ postgresql_admin_user }}"
  shell: "psql -c 'GRANT SELECT ON pg_shadow TO {{ postgresql_pgbouncer_auth_user.name }}' {{ item.name }}"
  with_items: '{{ postgresql_databases }}'
  when: postgresql_databases|length > 0 

- name: PostgreSQL | Defaults file for pgbouncer
  lineinfile:
    create: yes
    state: present
    dest: "/etc/default/pgbouncer"
    line: "START=1"

- name: PostgreSQL | Starting pgbouncer service
  service:
    name: pgbouncer
    state: restarted
