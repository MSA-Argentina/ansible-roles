---
  - name: Ubuntu | Adding repo key
    apt_key:
      url=http://nginx.org/keys/nginx_signing.key
      state=present
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Adding nginx repository
    apt_repository:
      repo="{{nginx_repository}}"
      update_cache=yes
      state=present
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Installing nginx
    apt:
      pkg=nginx
      state=present
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Creating SSL dir
    file:
      path="{{nginx_ssl_dir}}"
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Creating sites-available dir
    file:
      path=/etc/nginx/sites-available
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Creating sites-enabled dir
    file:
      path=/etc/nginx/sites-enabled
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Copying nginx.conf
    template:
      src=nginx.conf.j2
      dest=/etc/nginx/nginx.conf
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Deleting default conf file
    file:
      path=/etc/nginx/conf.d/default.conf
      state=absent
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Adding security config to conf.d
    template:
      src=security.conf.j2
      dest=/etc/nginx/conf.d/security.conf
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Adding gzip config to conf.d
    template:
      src=gzip.conf.j2
      dest=/etc/nginx/conf.d/gzip.conf
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'Ubuntu'
    notify:
      - restart nginx

  - name: start nginx
    service:
      name: nginx
      state: started
