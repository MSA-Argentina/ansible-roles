---
  #TODO: the script has hardcoded values. Create a module to abstract this functionality.
  # - name: Ubuntu | Changing sources to Ubuntu local mirror
  #   script: configure_sources.sh
  #   when: bootstrap_local_sources and ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Upgrade system
    apt:
      upgrade=dist
    when: bootstrap_upgrade_system and ansible_distribution == 'Ubuntu'

  - name: Ubuntu | Installing essential packages to build and run software
    apt:
      state: latest
      update_cache: yes
      pkg:
        - build-essential
        - bzip2
        - curl
        - libssl-dev
        - locales
        - ntp
        - openssl
        - software-properties-common
        - ssl-cert
        - wget
    when: ansible_distribution == 'Ubuntu'

  - name: FreeBSD | Installing essential packages to build and run software
    pkgng:
      pkg="{{packages}}"
      state=present
    vars:
      packages:
        - bzip2
        - curl
        - openssl
        - wget
        - rsync
    when: ansible_distribution == 'FreeBSD'

  - name: Ubuntu | Installing useful packages for development in the server
    apt:
      state: latest
      update_cache: yes
      pkg:
        - bash
        - git
        - htop
        - silversearcher-ag
        - vim
        - tree
        - multitail
        - most
        - unzip
    when: bootstrap_install_dev_packages and ansible_distribution == 'Ubuntu'

  - name: FreeBSD | Installing useful packages for development in the server
    pkgng:
      pkg={{item}}
      state=present
    vars:
      packages:
        - git
        - htop
        - the_silver_searcher
        - vim-lite
        - tree
        - multitail
        - most
        - unzip
    when: bootstrap_install_dev_packages and ansible_distribution == 'FreeBSD'

  - name: Adding nagios plugin
    apt:
      pkg=nagios-plugins
      state=latest
      update_cache=yes
      install_recommends=no
    when: bootstrap_nagios

  # - name: Ubuntu | Adding mosh PPA
  #   apt_repository:
  #     repo="ppa:keithw/mosh"
  #     update_cache=yes
  #   when: bootstrap_install_mosh and ansible_distribution == 'Ubuntu'

  # - name: Ubuntu | Installing mosh
  #   apt:
  #     pkg=mosh
  #     state=latest
  #     update_cache=yes
  #     install_recommends=no
  #   when: bootstrap_install_mosh and ansible_distribution == 'Ubuntu'

  # - name: Ubuntu | Enabling port(s) for mosh in ufw
  #   ufw:
  #     rule=allow
  #     port="60000:61000"
  #     proto=udp
  #   when: bootstrap_install_mosh and ansible_distribution == 'Ubuntu'
