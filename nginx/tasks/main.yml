---
  - name: Adding repo key
    apt_key:
      url=http://nginx.org/keys/nginx_signing.key
      state=present
    when: ansible_distribution == 'Ubuntu'

  - name: Adding nginx repository (Ubuntu)
    apt_repository:
      repo="{{nginx_repository}}"
      update_cache=yes
      state=present
    when: ansible_distribution == 'Ubuntu'

  - name: Adding nginx repository (CentOS)
    copy:
      src=nginx.repo
      dest=/etc/yum.repos.d/nginx.repo
    when: ansible_distribution == 'Amazon'

  - name: Installing nginx
    apt:
      pkg=nginx
      state=present
    when: ansible_distribution == 'Ubuntu'

  - name: Installing nginx
    yum:
      name=nginx
      state=present
    when: ansible_distribution == 'Amazon'

  - name: Installing nginx
    pkgng:
      name=nginx
      state=present
    when: ansible_distribution == 'FreeBSD'

  - name: Enabling nginx service (FreeBSD)
    lineinfile:
      dest=/etc/rc.conf
      line="nginx_enable='YES'"
      state=present
    when: ansible_distribution == 'FreeBSD'

  - name: Creating SSL dir
    file:
      path="{{nginx_ssl_dir}}"
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'Ubuntu'

  - name: Creating SSL dir (FreeBSD)
    file:
      path="{{nginx_freebsd_ssl_dir}}"
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'FreeBSD'

  - name: Creating sites-available dir
    file:
      path=/etc/nginx/sites-available
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'Ubuntu'

  - name: Creating sites-enabled dir
    file:
      path=/etc/nginx/sites-enabled
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'Ubuntu'

  - name: Creating sites-available dir
    file:
      path="{{nginx_freebsd_sites_available_dir}}"
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'FreeBSD'

  - name: Creating sites-enabled dir
    file:
      path="{{nginx_freebsd_sites_enabled_dir}}"
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'FreeBSD'

  - name: Creating conf.d dir
    file:
      path="{{nginx_freebsd_dir}}/conf.d"
      state=directory
      owner=root
      mode=770
    when: ansible_distribution == 'FreeBSD'

  - name: Copying nginx.conf
    template:
      src=nginx.conf.j2
      dest=/etc/nginx/nginx.conf
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'Ubuntu'

  - name: Copying nginx.conf
    template:
      src=nginx_freebsd.conf.j2
      dest="{{nginx_freebsd_dir}}/nginx.conf"
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'FreeBSD'

  - name: Deleting default conf file
    file:
      path=/etc/nginx/conf.d/default.conf
      state=absent
    when: ansible_distribution == 'Ubuntu'

  - name: Adding security config to conf.d
    template:
      src=security.conf.j2
      dest=/etc/nginx/conf.d/security.conf
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'Ubuntu'

  - name: Adding gzip config to conf.d
    template:
      src=gzip.conf.j2
      dest=/etc/nginx/conf.d/gzip.conf
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'Ubuntu'
    notify:
      - restart nginx

  - name: Adding security config to conf.d
    template:
      src=security.conf.j2
      dest=/etc/nginx/conf.d/security.conf
      dest="{{nginx_freebsd_dir}}/conf.d/security.conf"
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'FreeBSD'

  - name: Adding gzip config to conf.d
    template:
      src=gzip.conf.j2
      dest="{{nginx_freebsd_dir}}/conf.d/gzip.conf"
      backup=yes
      owner=root
      mode=0644
    when: ansible_distribution == 'FreeBSD'
    notify:
      - restart nginx

  - name: start nginx
    service:
      name: nginx
      state: started
